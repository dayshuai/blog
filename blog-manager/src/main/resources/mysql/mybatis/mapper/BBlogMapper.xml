<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dayshuai.blog.dao.BBlogMapper">
  <resultMap id="BaseResultMap" type="com.dayshuai.blog.dto.BBlog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="mdf_time" jdbcType="TIMESTAMP" property="mdfTime" />
    <result column="author_id" jdbcType="BIGINT" property="authorId" />
    <result column="likes_num" jdbcType="BIGINT" property="likesNum" />
    <result column="blog_discussCount" jdbcType="INTEGER" property="blogDiscusscount" />
    <result column="blog_blogViews" jdbcType="INTEGER" property="blogBlogviews" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />

  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.dayshuai.blog.dto.BBlog">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, create_time, mdf_time, author_id, likes_num, blog_discussCount, blog_blogViews
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>

  <select id="selectBlogList" parameterType="BBlog" resultMap="ResultMapWithBLOBs">

    <include refid="selectBlogList" />

  </select>


  <sql id="selectBlogList">
    select
    blog.id, blog.title, blog.create_time, blog.mdf_time, blog.author_id, blog.likes_num, blog.blog_discussCount, blog.blog_blogViews
    ,
    blog.content, uuser.user_name
    from b_blog blog left join u_user uuser on uuser.id = blog.author_id
  </sql>

  <select id="queryBlobByUser" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <include refid="selectBlogList" />
    where author_id = #{id,jdbcType=BIGINT}
  </select>


  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from b_blog
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from b_blog
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.dayshuai.blog.dto.BBlog">
    insert into b_blog (id, title, create_time, 
      mdf_time, author_id, likes_num, 
      blog_discussCount, blog_blogViews, content
      )
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{mdfTime,jdbcType=TIMESTAMP}, #{authorId,jdbcType=BIGINT}, #{likesNum,jdbcType=BIGINT}, 
      #{blogDiscusscount,jdbcType=INTEGER}, #{blogBlogviews,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="saveBlogTag">
        INSERT INTO blog_tag (blog_id, tag_id)
        VALUES (#{blogId},#{tagId})
    </insert>

  <insert id="deleteTagsById">
      DELETE FROM blog_tag WHERE blog_id = #{blogId}
  </insert>




  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" keyColumn="id" parameterType="com.dayshuai.blog.dto.BBlog">

    insert into b_blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
        create_time,
      <if test="mdfTime != null">
        mdf_time,
      </if>
      <if test="authorId != null">
        author_id,
      </if>
      <if test="likesNum != null">
        likes_num,
      </if>
      <if test="blogDiscusscount != null">
        blog_discussCount,
      </if>
      <if test="blogBlogviews != null">
        blog_blogViews,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
        sysdate(),
      <if test="mdfTime != null">
        #{mdfTime,jdbcType=TIMESTAMP},
      </if>
      <if test="authorId != null">
        #{authorId,jdbcType=BIGINT},
      </if>
      <if test="likesNum != null">
        #{likesNum,jdbcType=BIGINT},
      </if>
      <if test="blogDiscusscount != null">
        #{blogDiscusscount,jdbcType=INTEGER},
      </if>
      <if test="blogBlogviews != null">
        #{blogBlogviews,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dayshuai.blog.dto.BBlog">
    update b_blog
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mdfTime != null">
        mdf_time = #{mdfTime,jdbcType=TIMESTAMP},
      </if>
      <if test="authorId != null">
        author_id = #{authorId,jdbcType=BIGINT},
      </if>
      <if test="likesNum != null">
        likes_num = #{likesNum,jdbcType=BIGINT},
      </if>
      <if test="blogDiscusscount != null">
        blog_discussCount = #{blogDiscusscount,jdbcType=INTEGER},
      </if>
      <if test="blogBlogviews != null">
        blog_blogViews = #{blogBlogviews,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.dayshuai.blog.dto.BBlog">
    update b_blog
    set title = #{title,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      mdf_time = #{mdfTime,jdbcType=TIMESTAMP},
      author_id = #{authorId,jdbcType=BIGINT},
      likes_num = #{likesNum,jdbcType=BIGINT},
      blog_discussCount = #{blogDiscusscount,jdbcType=INTEGER},
      blog_blogViews = #{blogBlogviews,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dayshuai.blog.dto.BBlog">
    update b_blog
    set title = #{title,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      mdf_time = #{mdfTime,jdbcType=TIMESTAMP},
      author_id = #{authorId,jdbcType=BIGINT},
      likes_num = #{likesNum,jdbcType=BIGINT},
      blog_discussCount = #{blogDiscusscount,jdbcType=INTEGER},
      blog_blogViews = #{blogBlogviews,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>